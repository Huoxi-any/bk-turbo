# RBAC配置
rbac:
  serviceAccount: bkci

## Add labels to all the deployed resources
commonLabels: {}

# ingress 配置
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: "1024m"
nginx-ingress-controller:
  enabled: false #minikube 没发生效
  defaultBackend:
    enabled: false
  service:
    type: NodePort


# 镜像配置
gatewayImage:
  registry: mirrors.tencent.com/bkce
  repository: bkci/gateway
  tag: 1.16.0
  pullPolicy: IfNotPresent 
  pullSecrets: []
backendImage:
  registry: mirrors.tencent.com/bkce
  repository: bkci/backend
  tag: 1.16.0
  pullPolicy: IfNotPresent 
  pullSecrets: []

# 内部数据源配置
mysql:
  image: 
    tag: 5.7.35
  enabled: true
  auth:
    # 修改此选项必须删除mysql的pvc , 否则会创建mysql失败
    rootPassword: root
redis:
  enabled: true
  auth:
    password: user
  replica:
    replicaCount: 1
elasticsearch:
  enabled: true
  master:
    replicas: 1
  coordinating:
    replicas: 1
  data:
    replicas: 1
rabbitmq:
  enabled: true
  auth:
    username: user
    password: user
    # 修改此选项必须删除rabbitmq的pvc , 否则会创建rabbitmq失败
    erlangCookie: cookie
  communityPlugins: "https://github.com/rabbitmq/rabbitmq-delayed-message-exchange/releases/download/3.8.17/rabbitmq_delayed_message_exchange-3.8.17.8f537ac.ez"
  extraPlugins: "rabbitmq_delayed_message_exchange"
  extraConfiguration: |-
    default_vhost = default-vhost
    default_permissions.configure = .*
    default_permissions.read = .*
    default_permissions.write = .*
influxdb:
  enabled: true
  image:
    tag: 1.8.3-debian-10-r88
  auth:
    admin:
      username: user
      password: password
      token: GnnsHwEcQ07sqpidcX2s

## 是否开启数据持久化，false则使用emptyDir类型volume, pod结束后数据将被清空，无法持久化
persistence:
  enabled: true
  accessMode: ReadWriteOnce
  size: 10Gi
  mountPath: /data1
  ## 绑定k8s集群中已存在的pvc
  ## Requires persistence.enabled: true
  # existingClaim: my-persistent-volume-claim

# Log Deployment
log:
  env:
    JVM_XMS: 512m
    # JVM的-xmx , 不能大于 limits.memory
    JVM_XMX: 1024m
  replicas: 1
  podLabels: {}
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  hostAliases: []
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

# Auth Deployment
auth:
  env:
    JVM_XMS: 512m
    # JVM的-xmx , 不能大于 limits.memory
    JVM_XMX: 1024m
  replicas: 1
  podLabels: {}
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  hostAliases: []
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

# agentless Deployment
agentless:
  env:
    JVM_XMS: 512m
    # JVM的-xmx , 不能大于 limits.memory
    JVM_XMX: 1024m
  replicas: 1
  podLabels: {}
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  hostAliases: []
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

# dockerhost Deployment
dockerhost:
  env:
    JVM_XMS: 512m
    # JVM的-xmx , 不能大于 limits.memory
    JVM_XMX: 1024m
  replicas: 1
  podLabels: {}
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  hostAliases: []
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

# artifactory Deployment
artifactory:
  env:
    JVM_XMS: 512m
    # JVM的-xmx , 不能大于 limits.memory
    JVM_XMX: 1024m
  replicas: 1
  podLabels: {}
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  hostAliases: []
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

# dispatch Deployment
dispatch:
  env:
    JVM_XMS: 512m
    # JVM的-xmx , 不能大于 limits.memory
    JVM_XMX: 1024m
  replicas: 1
  podLabels: {}
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  hostAliases: []
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

# dispatchDocker Deployment
dispatchDocker:
  env:
    JVM_XMS: 512m
    # JVM的-xmx , 不能大于 limits.memory
    JVM_XMX: 1024m
  replicas: 1
  podLabels: {}
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  hostAliases: []
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

# environment Deployment
environment:
  env:
    JVM_XMS: 512m
    # JVM的-xmx , 不能大于 limits.memory
    JVM_XMX: 1024m
  replicas: 1
  podLabels: {}
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  hostAliases: []
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

# image Deployment
image:
  env:
    JVM_XMS: 512m
    # JVM的-xmx , 不能大于 limits.memory
    JVM_XMX: 1024m
  replicas: 1
  podLabels: {}
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  hostAliases: []
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

# misc Deployment
misc:
  env:
    JVM_XMS: 512m
    # JVM的-xmx , 不能大于 limits.memory
    JVM_XMX: 1024m
  replicas: 1
  podLabels: {}
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  hostAliases: []
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

# monitoring Deployment
monitoring:
  env:
    JVM_XMS: 512m
    # JVM的-xmx , 不能大于 limits.memory
    JVM_XMX: 1024m
  replicas: 1
  podLabels: {}
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  hostAliases: []
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

# notify Deployment
notify:
  env:
    JVM_XMS: 512m
    # JVM的-xmx , 不能大于 limits.memory
    JVM_XMX: 1024m
  replicas: 1
  podLabels: {}
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  hostAliases: []
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

# openapi Deployment
openapi:
  env:
    JVM_XMS: 512m
    # JVM的-xmx , 不能大于 limits.memory
    JVM_XMX: 1024m
  replicas: 1
  podLabels: {}
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  hostAliases: []
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

# plugin Deployment
plugin:
  env:
    JVM_XMS: 512m
    # JVM的-xmx , 不能大于 limits.memory
    JVM_XMX: 1024m
  replicas: 1
  podLabels: {}
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  hostAliases: []
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

# process Deployment
process:
  env:
    JVM_XMS: 512m
    # JVM的-xmx , 不能大于 limits.memory
    JVM_XMX: 1024m
  replicas: 1
  podLabels: {}
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  hostAliases: []
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

# project Deployment
project:
  env:
    JVM_XMS: 512m
    # JVM的-xmx , 不能大于 limits.memory
    JVM_XMX: 1024m
  replicas: 1
  podLabels: {}
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  hostAliases: []
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

# quality Deployment
quality:
  env:
    JVM_XMS: 512m
    # JVM的-xmx , 不能大于 limits.memory
    JVM_XMX: 1024m
  replicas: 1
  podLabels: {}
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  hostAliases: []
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

# repository Deployment
repository:
  env:
    JVM_XMS: 512m
    # JVM的-xmx , 不能大于 limits.memory
    JVM_XMX: 1024m
  replicas: 1
  podLabels: {}
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  hostAliases: []
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

# sign Deployment
sign:
  env:
    JVM_XMS: 512m
    # JVM的-xmx , 不能大于 limits.memory
    JVM_XMX: 1024m
  replicas: 1
  podLabels: {}
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  hostAliases: []
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

# store Deployment
store:
  env:
    JVM_XMS: 512m
    # JVM的-xmx , 不能大于 limits.memory
    JVM_XMX: 1024m
  replicas: 1
  podLabels: {}
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  hostAliases: []
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

# ticket Deployment
ticket:
  env:
    JVM_XMS: 512m
    # JVM的-xmx , 不能大于 limits.memory
    JVM_XMX: 1024m
  replicas: 1
  podLabels: {}
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  hostAliases: []
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

# websocket Deployment
websocket:
  env:
    JVM_XMS: 512m
    # JVM的-xmx , 不能大于 limits.memory
    JVM_XMX: 1024m
  replicas: 1
  podLabels: {}
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 1500Mi
  hostAliases: []
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

# angetless Deployment
angetless:
  env:
    JVM_XMS: 512m
    # JVM的-xmx , 不能大于 limits.memory
    JVM_XMX: 1024m
  replicas: 1
  podLabels: {}
  resources:
    requests:
      cpu: 100m
      memory: 1000Mi
    limits:
      cpu: 500m
      memory: 3000Mi
  hostAliases: []
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""

# gateway Deployment
gateway:
  replicas: 1
  podLabels: {}
  resources:
    requests:
      cpu: 100m
      memory: 500Mi
    limits:
      cpu: 500m
      memory: 800Mi
  hostAliases: []
  containerSecurityContext:
    enabled: false
    runAsUser: 1001
    runAsNonRoot: true
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []
  affinity: {}
  nodeSelector: {}
  tolerations: []
  podLabels: {}
  podAnnotations: {}
  priorityClassName: ""
